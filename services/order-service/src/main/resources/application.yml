spring:
  datasource:
    url: jdbc:mysql://localhost/order
    username: root
    password: hanwool
  hikari:
    initializationFailTimeout: 60000
  jpa:
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
    hibernate:
      ddl-auto: update


spring.cloud.stream:
  defaultBinder: kafka
  default.contentType: application/json
  bindings.input:
    destination: orders
    group: ordersGroup

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.kafka.bindings.input.consumer:
  enableDlq: true

spring.cloud.stream.kafka.binder:
  brokers: 127.0.0.1
  defaultBrokerPort: 9092


logging:
  level:
    root: INFO
    me.hanwool: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

server:
  port: 7002
  error:
    include-message: always

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://mysql/order
    username: root
    password: hanwool
  hikari:
    initializationFailTimeout: 60000
  jpa:
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
    hibernate:


spring.cloud.stream.kafka.binder.brokers: kafka


logging:
  level:
    root: INFO
    me.hanwool: DEBUG

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: stage

logging:
  level:
    root: INFO
    me.hanwool: INFO

server:
  port: 8080
  error:
    include-message: never

---
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: INFO
    me.hanwool: INFO

server:
  port: 8080